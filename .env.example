DATABASE_URL="postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public" #The database url for the database to be used. Please ensure it is migrated (the tables are created) and optionally seeded (some initial data is inserted). See the README for more information on how to do this.
PORT= "3001" #The port to run the server on (default is 3001)
ENCRYPTION_KEY="12345678901234567890123456789012" #This is a secret key used to encrypt the sensitive wallet secrets in the database. Please change this to a secure string of at least 32 characters.

#The services will run the following jobs whenever previous ones completed or after the provided time
BATCH_PAYMENT_INTERVAL="*/4 * * * *" #cron expression for batching requests every 4 minutes
CHECK_COLLECTION_INTERVAL="*/5 * * * *" #cron expression for checking collection every 5 minutes
CHECK_TX_INTERVAL="*/3 * * * *" #cron expression for checking payment every 3 minutes
CHECK_COLLECT_REFUND_INTERVAL="*/5 * * * *" #cron expression for checking collection and refund every 5 minutes
CHECK_REFUND_INTERVAL="*/5 * * * *" #cron expression for checking refund every 5 minutes
CHECK_DENY_INTERVAL="*/5 * * * *" #cron expression for checking deny every 5 minutes
CHECK_WALLET_TRANSACTION_HASH_INTERVAL="*/1 * * * *" #cron expression for checking wallet transaction hash every 1 minute this also reruns potentially effected services by unlocking the wallet

#The following data is only needed for seeding
NETWORK="preprod" #Which CARDANO Network should be used. The default public test contract is "preprod" other allowed values are "preview" or "mainnet"
BLOCKFROST_API_KEY="your_blockfrost_api_key" #Your blockfrost api key. It is required to interact with the blockchain. Receive a free key at https://blockfrost.io/ for the network you are using (e.g. preview, mainnet...)
ADMIN_KEY="abcdef_this_should_be_very_secure" #The key of the admin user, this key will have all permissions, like doing payments, changing configurations and can also be used to create new (more limited) api_keys

#Those are used to solve disputes (the default payment contract requires 2/3 independent admins to agree to resolve disputes). If you are using the public PREPROD test contract, you can use the example values. Otherwise check the documentation of the payment contract you are using.
ADMIN_WALLET1_ADDRESS="addr_test1qrgpga399l0r8fg7n0jfshhxsjl26w0uslxf5m02yclur8mremst4rk8xsz9lx78e9sdtjfsyj3c9kll2c4958uhkals2qrm9q" # This should be the example address, if you use the public PREPROD test contract. Otherwise the first wallet address of the network admin. 
ADMIN_WALLET2_ADDRESS="addr_test1qqturqflellkrv0kcg9guuzkk8wx5yaytpsfcd3mmvemg0v7akaxvzel56ls59kw2fs20ckxhs09365medeen6tyy0pqkx3hku" #This is the second wallet address of the network admin. This should be the example address, if you use the public PREPROD test contract.
ADMIN_WALLET3_ADDRESS="addr_test1qz93vk0v6jcy4n8g4w3srqkjmcy6ryw90gngx0llvyek5rsc665n90486m4vvue3c2dsjg8sw3tchkjzgxgp4y77rkxqgxjd2h" #This is the third wallet address of the network admin. This should be the example address, if you use the public PREPROD test contract.

#The default payment contract will collect a fee to support the network.
FEE_WALLET_ADDRESS="addr_test1qrgpga399l0r8fg7n0jfshhxsjl26w0uslxf5m02yclur8mremst4rk8xsz9lx78e9sdtjfsyj3c9kll2c4958uhkals2qrm9q" # This should be the example address, if you use the public PREPROD test contract. Otherwise the wallet address of the network that receives the fee. Please check the documentation of the payment contract you are using.
FEE_PERMILLE="50" #The fee for the network in permille. This should be the example, if you use the public PREPROD test contract. Otherwise please check the documentation of the payment contract you are using.

#Used to configure payment and purchase wallets
PURCHASE_WALLET_MNEMONIC="space separated mnemonic of the wallet used to purchase" #***OPTIONAL*** The mnemonic of the wallet used to purchase any agent requests. This needs to have sufficient funds to pay, or be topped up. If you do not provide a mnemonic, a new one will be generated. Please ensure you export them immediately after creation and store them securely.
SELLING_WALLET_MNEMONIC="space separated mnemonic of the wallet used to interact with the smart contract" #***OPTIONAL*** The mnemonic of the wallet used to interact with the smart contract. This only needs minimal funds, to cover the CARDANO Network fees. If you do not provide a mnemonic, a new one will be generated. Please ensure you export them immediately after creation and store them securely.
COLLECTION_WALLET_ADDRESS="addr_test1abc12z3xyum8vqndgdd9mdnmafh3djcxnc6jemlgdmswcve6tkw" #***OPTIONAL BUT STRONGLY RECOMMENDED*** The wallet address of the collection wallet. It will receive all payments after a successful and completed purchase (not refund). It does not need any funds, however it is strongly recommended to create it via a hardware wallet or ensure its secret is stored securely. If you do not provide an address, the SELLING_WALLET will be used.


