{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Template API",
        "description": "This is the default API from a template"
    },
    "servers": [
        {
            "url": "./../api/v1/"
        }
    ],
    "components": {
        "securitySchemes": {
            "API-Key": {
                "type": "apiKey",
                "in": "header",
                "name": "token",
                "description": "API key authentication via header (token)"
            }
        },
        "schemas": {},
        "parameters": {}
    },
    "paths": {
        "/health/": {
            "get": {
                "summary": "Get the status of the API server",
                "responses": {
                    "200": {
                        "description": "Object with user data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status"
                                    ],
                                    "example": {
                                        "status": "up"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api-key-status/": {
            "get": {
                "description": "Gets api key status",
                "summary": "REQUIRES API KEY Authentication (+READ)",
                "tags": [
                    "api-key-status"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API key status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "apiKey": {
                                                    "type": "string"
                                                },
                                                "permission": {
                                                    "type": "string",
                                                    "enum": [
                                                        "READ",
                                                        "READ_PAY",
                                                        "ADMIN"
                                                    ]
                                                },
                                                "usageLimited": {
                                                    "type": "boolean"
                                                },
                                                "remainingUsageCredits": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "unit": {
                                                                "type": "string",
                                                                "maxLength": 150
                                                            },
                                                            "amount": {
                                                                "type": "integer",
                                                                "nullable": true,
                                                                "minimum": 0,
                                                                "maximum": 100000000
                                                            }
                                                        },
                                                        "required": [
                                                            "unit",
                                                            "amount"
                                                        ]
                                                    }
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "REVOKED"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "apiKey",
                                                "permission",
                                                "usageLimited",
                                                "remainingUsageCredits",
                                                "status"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "status": "ACTIVE",
                                            "apiKey": "masumi-payment-api-key-secret",
                                            "permission": "ADMIN",
                                            "usageLimited": true,
                                            "remainingUsageCredits": [
                                                {
                                                    "unit": "unit",
                                                    "amount": 1000000
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blockfrost-keys/": {
            "get": {
                "description": "Gets blockfrost keys",
                "summary": "REQUIRES API KEY Authentication (+ADMIN)",
                "tags": [
                    "blockfrost-keys"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 250
                        },
                        "required": false,
                        "name": "cursorId",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 100
                        },
                        "required": false,
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blockfrost keys",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "blockfrostKeys": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "blockfrostApiKey": {
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string"
                                                    },
                                                    "network": {
                                                        "type": "string",
                                                        "enum": [
                                                            "PREVIEW",
                                                            "PREPROD",
                                                            "MAINNET"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "blockfrostApiKey",
                                                    "createdAt",
                                                    "updatedAt",
                                                    "network"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "blockfrostKeys"
                                    ],
                                    "example": {
                                        "blockfrostKeys": [
                                            {
                                                "network": "PREPROD",
                                                "id": "unique-cuid-v2",
                                                "blockfrostApiKey": "blockfrost_api_key",
                                                "createdAt": "2025-01-17T17:45:47.986Z",
                                                "updatedAt": "2025-01-17T17:45:47.986Z"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallet/": {
            "get": {
                "description": "Gets wallet status",
                "summary": "REQUIRES API KEY Authentication (+ADMIN)",
                "tags": [
                    "wallet"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Selling",
                                "Purchasing"
                            ]
                        },
                        "required": true,
                        "name": "walletType",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 250
                        },
                        "required": true,
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "required": false,
                        "name": "includeSecret",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "walletSecret": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string"
                                                        },
                                                        "updatedAt": {
                                                            "type": "string"
                                                        },
                                                        "secret": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "updatedAt",
                                                        "secret"
                                                    ]
                                                },
                                                "pendingTransaction": {
                                                    "type": "object",
                                                    "nullable": true,
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string"
                                                        },
                                                        "updatedAt": {
                                                            "type": "string"
                                                        },
                                                        "hash": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "lastCheckedAt": {
                                                            "type": "string",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "updatedAt",
                                                        "hash",
                                                        "lastCheckedAt"
                                                    ]
                                                },
                                                "note": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "walletVkey": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "pendingTransaction",
                                                "note",
                                                "walletVkey"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "walletVkey": "walletVkey",
                                            "note": "note",
                                            "pendingTransaction": null,
                                            "walletSecret": {
                                                "createdAt": "2025-01-17T17:45:47.986Z",
                                                "updatedAt": "2025-01-17T17:45:47.986Z",
                                                "secret": "decoded_secret"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a wallet, it will not be saved in the database, please ensure to remember the mnemonic",
                "summary": "REQUIRES API KEY Authentication (+ADMIN)",
                "tags": [
                    "wallet"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "network": {
                                        "type": "string",
                                        "enum": [
                                            "PREVIEW",
                                            "PREPROD",
                                            "MAINNET"
                                        ]
                                    }
                                },
                                "required": [
                                    "network"
                                ],
                                "example": {
                                    "network": "PREPROD"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Wallet created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "walletSecret": {
                                            "type": "string"
                                        },
                                        "walletAddress": {
                                            "type": "string"
                                        },
                                        "walletVkey": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "walletSecret",
                                        "walletAddress",
                                        "walletVkey"
                                    ],
                                    "example": {
                                        "walletSecret": "wallet_secret",
                                        "walletAddress": "wallet_address",
                                        "walletVkey": "wallet_vkey"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api-key/": {
            "get": {
                "description": "Gets api key status",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "api-key"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "required": false,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 550
                        },
                        "required": false,
                        "name": "cursorApiKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Api key status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "apiKeys": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "apiKey": {
                                                                "type": "string"
                                                            },
                                                            "permission": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "READ",
                                                                    "READ_PAY",
                                                                    "ADMIN"
                                                                ]
                                                            },
                                                            "usageLimited": {
                                                                "type": "boolean"
                                                            },
                                                            "remainingUsageCredits": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "unit": {
                                                                            "type": "string",
                                                                            "maxLength": 150
                                                                        },
                                                                        "amount": {
                                                                            "type": "integer",
                                                                            "nullable": true,
                                                                            "minimum": 0,
                                                                            "maximum": 100000000
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "unit",
                                                                        "amount"
                                                                    ]
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ACTIVE",
                                                                    "REVOKED"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "apiKey",
                                                            "permission",
                                                            "usageLimited",
                                                            "remainingUsageCredits",
                                                            "status"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "apiKeys"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "data": {
                                            "apiKeys": [
                                                {
                                                    "apiKey": "masumi-payment-api-key-secret",
                                                    "permission": "ADMIN",
                                                    "usageLimited": true,
                                                    "remainingUsageCredits": [
                                                        {
                                                            "unit": "unit",
                                                            "amount": 1000000
                                                        }
                                                    ],
                                                    "status": "ACTIVE"
                                                }
                                            ]
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Creates a API key",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "api-key"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usageLimited": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "usageCredits": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "unit": {
                                                    "type": "string",
                                                    "maxLength": 150
                                                },
                                                "amount": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 1000000
                                                }
                                            },
                                            "required": [
                                                "unit",
                                                "amount"
                                            ]
                                        }
                                    },
                                    "permission": {
                                        "type": "string",
                                        "enum": [
                                            "READ",
                                            "READ_PAY",
                                            "ADMIN"
                                        ],
                                        "default": "READ"
                                    }
                                },
                                "required": [
                                    "usageCredits"
                                ],
                                "example": {
                                    "usageLimited": true,
                                    "usageCredits": [
                                        {
                                            "unit": "unit",
                                            "amount": 1000000
                                        }
                                    ],
                                    "permission": "ADMIN"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API key deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "apiKey": {
                                                    "type": "string"
                                                },
                                                "permission": {
                                                    "type": "string",
                                                    "enum": [
                                                        "READ",
                                                        "READ_PAY",
                                                        "ADMIN"
                                                    ]
                                                },
                                                "usageLimited": {
                                                    "type": "boolean"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "REVOKED"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "apiKey",
                                                "permission",
                                                "usageLimited",
                                                "status"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "id": "unique-cuid-v2-of-entry-to-delete",
                                            "apiKey": "masumi-payment-api-key-secret",
                                            "permission": "ADMIN",
                                            "usageLimited": true,
                                            "status": "ACTIVE"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "Creates a API key",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "api-key"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "maxLength": 150
                                    },
                                    "apiKey": {
                                        "type": "string",
                                        "maxLength": 550
                                    },
                                    "usageCredits": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "unit": {
                                                    "type": "string",
                                                    "maxLength": 150
                                                },
                                                "amount": {
                                                    "type": "integer",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 1000000
                                                }
                                            },
                                            "required": [
                                                "unit",
                                                "amount"
                                            ]
                                        }
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "ACTIVE",
                                            "REVOKED"
                                        ],
                                        "default": "ACTIVE"
                                    }
                                },
                                "example": {
                                    "id": "id_or_apiKey_unique-cuid-v2-of-entry-to-update",
                                    "apiKey": "id_or_apiKey_api-key-to-update",
                                    "usageCredits": [
                                        {
                                            "unit": "unit",
                                            "amount": 1000000
                                        }
                                    ],
                                    "status": "ACTIVE"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API key deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "apiKey": {
                                                    "type": "string"
                                                },
                                                "permission": {
                                                    "type": "string",
                                                    "enum": [
                                                        "READ",
                                                        "READ_PAY",
                                                        "ADMIN"
                                                    ]
                                                },
                                                "usageLimited": {
                                                    "type": "boolean"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "REVOKED"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "apiKey",
                                                "permission",
                                                "usageLimited",
                                                "status"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "id": "unique-cuid-v2-of-entry-to-delete",
                                            "apiKey": "masumi-payment-api-key-secret",
                                            "permission": "ADMIN",
                                            "usageLimited": true,
                                            "status": "ACTIVE"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Removes a API key",
                "summary": "REQUIRES API KEY Authentication (+admin)",
                "tags": [
                    "api-key"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "maxLength": 150
                                    },
                                    "apiKey": {
                                        "type": "string",
                                        "maxLength": 550
                                    }
                                },
                                "example": {
                                    "id": "id_or_apiKey_unique-cuid-v2-of-entry-to-delete",
                                    "apiKey": "id_or_apiKey_api-key-to-delete"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API key deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "apiKey": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "apiKey"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "id": "unique-cuid-v2-of-entry-to-delete",
                                            "apiKey": "masumi-registry-api-key-secret"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/payment/": {
            "get": {
                "description": "Gets the payment status. It needs to be created first with a POST request.",
                "summary": "REQUIRES API KEY Authentication (+READ)",
                "tags": [
                    "payment"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "required": false,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 250
                        },
                        "required": false,
                        "name": "cursorIdentifier",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PREVIEW",
                                "PREPROD",
                                "MAINNET"
                            ]
                        },
                        "required": true,
                        "name": "network",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "WEB3_CARDANO_V1"
                            ]
                        },
                        "required": true,
                        "name": "paymentType",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 250
                        },
                        "required": true,
                        "name": "contractAddress",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "payments": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "createdAt": {
                                                                "type": "string"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "PaymentRequested",
                                                                    "PaymentConfirmed",
                                                                    "PaymentInvalid",
                                                                    "ResultGenerated",
                                                                    "CompletedInitiated",
                                                                    "CompletedConfirmed",
                                                                    "Denied",
                                                                    "RefundRequested",
                                                                    "Refunded",
                                                                    "WithdrawnInitiated",
                                                                    "WithdrawnConfirmed",
                                                                    "DisputedWithdrawn"
                                                                ]
                                                            },
                                                            "txHash": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "utxo": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "errorType": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "enum": [
                                                                    "NETWORK_ERROR",
                                                                    "UNKNOWN"
                                                                ]
                                                            },
                                                            "errorNote": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "errorRequiresManualReview": {
                                                                "type": "boolean",
                                                                "nullable": true
                                                            },
                                                            "identifier": {
                                                                "type": "string",
                                                                "maxLength": 250
                                                            },
                                                            "sellingWallets": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "walletVkey": {
                                                                            "type": "string"
                                                                        },
                                                                        "note": {
                                                                            "type": "string",
                                                                            "nullable": true
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "id",
                                                                        "walletVkey",
                                                                        "note"
                                                                    ]
                                                                }
                                                            },
                                                            "collectionWallet": {
                                                                "type": "object",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "walletAddress": {
                                                                        "type": "string"
                                                                    },
                                                                    "note": {
                                                                        "type": "string",
                                                                        "nullable": true
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "walletAddress",
                                                                    "note"
                                                                ]
                                                            },
                                                            "buyerWallet": {
                                                                "type": "object",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "walletVkey": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "walletVkey"
                                                                ]
                                                            },
                                                            "amounts": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "createdAt": {
                                                                            "type": "string"
                                                                        },
                                                                        "updatedAt": {
                                                                            "type": "string"
                                                                        },
                                                                        "amount": {
                                                                            "type": "number",
                                                                            "nullable": true,
                                                                            "minimum": 0,
                                                                            "maximum": 9007199254740991
                                                                        },
                                                                        "unit": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "id",
                                                                        "createdAt",
                                                                        "updatedAt",
                                                                        "amount",
                                                                        "unit"
                                                                    ]
                                                                }
                                                            },
                                                            "checkedBy": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "network": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "PREVIEW",
                                                                            "PREPROD",
                                                                            "MAINNET"
                                                                        ]
                                                                    },
                                                                    "addressToCheck": {
                                                                        "type": "string",
                                                                        "maxLength": 250
                                                                    },
                                                                    "paymentType": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "WEB3_CARDANO_V1"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "network",
                                                                    "addressToCheck",
                                                                    "paymentType"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "createdAt",
                                                            "updatedAt",
                                                            "status",
                                                            "txHash",
                                                            "utxo",
                                                            "errorType",
                                                            "errorNote",
                                                            "errorRequiresManualReview",
                                                            "identifier",
                                                            "sellingWallets",
                                                            "collectionWallet",
                                                            "buyerWallet",
                                                            "amounts",
                                                            "checkedBy"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "payments"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "data": {
                                            "payments": [
                                                {
                                                    "createdAt": "2025-01-17T17:45:47.987Z",
                                                    "updatedAt": "2025-01-17T17:45:47.987Z",
                                                    "status": "PaymentRequested",
                                                    "txHash": "tx_hash",
                                                    "utxo": "utxo",
                                                    "errorType": "NETWORK_ERROR",
                                                    "errorNote": "error_note",
                                                    "errorRequiresManualReview": false,
                                                    "identifier": "identifier",
                                                    "sellingWallets": [
                                                        {
                                                            "id": "unique-cuid-v2-auto-generated",
                                                            "walletVkey": "wallet_vkey",
                                                            "note": "note"
                                                        }
                                                    ],
                                                    "collectionWallet": {
                                                        "id": "unique-cuid-v2-auto-generated",
                                                        "walletAddress": "wallet_address",
                                                        "note": "note"
                                                    },
                                                    "buyerWallet": {
                                                        "walletVkey": "wallet_vkey"
                                                    },
                                                    "amounts": [
                                                        {
                                                            "id": "unique-cuid-v2-auto-generated",
                                                            "createdAt": "2025-01-17T17:45:47.987Z",
                                                            "updatedAt": "2025-01-17T17:45:47.987Z",
                                                            "amount": 1000000,
                                                            "unit": "unit"
                                                        }
                                                    ],
                                                    "checkedBy": {
                                                        "id": "unique-cuid-v2-auto-generated",
                                                        "network": "PREPROD",
                                                        "addressToCheck": "address_to_check",
                                                        "paymentType": "WEB3_CARDANO_V1"
                                                    }
                                                }
                                            ]
                                        },
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Creates a payment request and identifier. This will check incoming payments in the background.",
                "summary": "REQUIRES API KEY Authentication (+PAY)",
                "tags": [
                    "payment"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "network": {
                                        "type": "string",
                                        "enum": [
                                            "PREVIEW",
                                            "PREPROD",
                                            "MAINNET"
                                        ]
                                    },
                                    "sellerVkey": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "agentIdentifier": {
                                        "type": "string",
                                        "minLength": 15,
                                        "maxLength": 250
                                    },
                                    "amounts": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "amount": {
                                                    "type": "number",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 9007199254740991
                                                },
                                                "unit": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "amount",
                                                "unit"
                                            ]
                                        },
                                        "maxItems": 7
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "enum": [
                                            "WEB3_CARDANO_V1"
                                        ]
                                    },
                                    "contractAddress": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "submitResultTime": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        ]
                                    },
                                    "unlockTime": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        ]
                                    },
                                    "refundTime": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "network",
                                    "sellerVkey",
                                    "agentIdentifier",
                                    "amounts",
                                    "paymentType",
                                    "contractAddress",
                                    "submitResultTime",
                                    "unlockTime",
                                    "refundTime"
                                ],
                                "example": {
                                    "agentIdentifier": "agent_identifier",
                                    "network": "PREPROD",
                                    "sellerVkey": "seller_vkey",
                                    "contractAddress": "address",
                                    "amounts": [
                                        {
                                            "amount": 1000000,
                                            "unit": "unit"
                                        }
                                    ],
                                    "paymentType": "WEB3_CARDANO_V1",
                                    "unlockTime": "2024-12-01T23:00:00.000Z",
                                    "submitResultTime": "2024-12-01T22:00:00.000Z",
                                    "refundTime": "2024-12-02T23:00:00.000Z"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment request created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "identifier": {
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "PaymentRequested",
                                                        "PaymentConfirmed",
                                                        "PaymentInvalid",
                                                        "ResultGenerated",
                                                        "CompletedInitiated",
                                                        "CompletedConfirmed",
                                                        "Denied",
                                                        "RefundRequested",
                                                        "Refunded",
                                                        "WithdrawnInitiated",
                                                        "WithdrawnConfirmed",
                                                        "DisputedWithdrawn"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "identifier",
                                                "createdAt",
                                                "updatedAt",
                                                "status"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "id": "unique-cuid-v2-auto-generated",
                                            "identifier": "agentIdentifier_unique-cuid-v2-auto-generated",
                                            "createdAt": "2025-01-17T17:45:47.987Z",
                                            "updatedAt": "2025-01-17T17:45:47.987Z",
                                            "status": "PaymentRequested"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "Completes a payment request. This will collect the funds after the unlock time.",
                "summary": "REQUIRES API KEY Authentication (+PAY)",
                "tags": [
                    "payment"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "network": {
                                        "type": "string",
                                        "enum": [
                                            "PREVIEW",
                                            "PREPROD",
                                            "MAINNET"
                                        ]
                                    },
                                    "sellerVkey": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "contractAddress": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "hash": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "identifier": {
                                        "type": "string",
                                        "maxLength": 250
                                    }
                                },
                                "required": [
                                    "network",
                                    "sellerVkey",
                                    "contractAddress",
                                    "hash",
                                    "identifier"
                                ],
                                "example": {
                                    "network": "PREPROD",
                                    "sellerVkey": "seller_vkey",
                                    "contractAddress": "address",
                                    "hash": "hash",
                                    "identifier": "identifier"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API key deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "PaymentRequested",
                                                        "PaymentConfirmed",
                                                        "PaymentInvalid",
                                                        "ResultGenerated",
                                                        "CompletedInitiated",
                                                        "CompletedConfirmed",
                                                        "Denied",
                                                        "RefundRequested",
                                                        "Refunded",
                                                        "WithdrawnInitiated",
                                                        "WithdrawnConfirmed",
                                                        "DisputedWithdrawn"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "createdAt",
                                                "updatedAt",
                                                "status"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "id": "unique-cuid-v2-auto-generated",
                                            "createdAt": "2025-01-17T17:45:47.987Z",
                                            "updatedAt": "2025-01-17T17:45:47.987Z",
                                            "status": "PaymentRequested"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/purchase/": {
            "get": {
                "description": "Gets the purchase status. It needs to be created first with a POST request.",
                "summary": "REQUIRES API KEY Authentication (+READ)",
                "tags": [
                    "purchase"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "required": false,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "identifier": {
                                    "type": "string",
                                    "maxLength": 250
                                },
                                "sellingWalletVkey": {
                                    "type": "string",
                                    "maxLength": 250
                                }
                            },
                            "required": [
                                "identifier",
                                "sellingWalletVkey"
                            ]
                        },
                        "required": false,
                        "name": "cursorIdentifier",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PREVIEW",
                                "PREPROD",
                                "MAINNET"
                            ]
                        },
                        "required": true,
                        "name": "network",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "WEB3_CARDANO_V1"
                            ]
                        },
                        "required": true,
                        "name": "paymentType",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 250
                        },
                        "required": true,
                        "name": "contractAddress",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purchase status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "purchases": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "createdAt": {
                                                                "type": "string"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "PurchaseRequested",
                                                                    "PurchaseInitiated",
                                                                    "PurchaseConfirmed",
                                                                    "Completed",
                                                                    "RefundRequestInitiated",
                                                                    "RefundRequestConfirmed",
                                                                    "RefundInitiated",
                                                                    "RefundConfirmed",
                                                                    "RefundRequestCanceledInitiated",
                                                                    "Withdrawn",
                                                                    "DisputedWithdrawn"
                                                                ]
                                                            },
                                                            "txHash": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "utxo": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "errorType": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "enum": [
                                                                    "NETWORK_ERROR",
                                                                    "INSUFFICIENT_FUNDS",
                                                                    "UNKNOWN"
                                                                ]
                                                            },
                                                            "errorNote": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "errorRequiresManualReview": {
                                                                "type": "boolean",
                                                                "nullable": true
                                                            },
                                                            "identifier": {
                                                                "type": "string",
                                                                "maxLength": 250
                                                            },
                                                            "purchaserWallet": {
                                                                "type": "object",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "walletVkey": {
                                                                        "type": "string"
                                                                    },
                                                                    "note": {
                                                                        "type": "string",
                                                                        "nullable": true
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "walletVkey",
                                                                    "note"
                                                                ]
                                                            },
                                                            "sellerWallet": {
                                                                "type": "object",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "walletVkey": {
                                                                        "type": "string"
                                                                    },
                                                                    "note": {
                                                                        "type": "string",
                                                                        "nullable": true
                                                                    }
                                                                },
                                                                "required": [
                                                                    "walletVkey",
                                                                    "note"
                                                                ]
                                                            },
                                                            "amounts": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "createdAt": {
                                                                            "type": "string"
                                                                        },
                                                                        "updatedAt": {
                                                                            "type": "string"
                                                                        },
                                                                        "amount": {
                                                                            "type": "number",
                                                                            "nullable": true,
                                                                            "minimum": 0,
                                                                            "maximum": 9007199254740991
                                                                        },
                                                                        "unit": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "id",
                                                                        "createdAt",
                                                                        "updatedAt",
                                                                        "amount",
                                                                        "unit"
                                                                    ]
                                                                }
                                                            },
                                                            "networkHandler": {
                                                                "type": "object",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "network": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "PREVIEW",
                                                                            "PREPROD",
                                                                            "MAINNET"
                                                                        ]
                                                                    },
                                                                    "addressToCheck": {
                                                                        "type": "string",
                                                                        "maxLength": 250
                                                                    },
                                                                    "paymentType": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "WEB3_CARDANO_V1"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "network",
                                                                    "addressToCheck",
                                                                    "paymentType"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "createdAt",
                                                            "updatedAt",
                                                            "status",
                                                            "txHash",
                                                            "utxo",
                                                            "errorType",
                                                            "errorNote",
                                                            "errorRequiresManualReview",
                                                            "identifier",
                                                            "purchaserWallet",
                                                            "sellerWallet",
                                                            "amounts",
                                                            "networkHandler"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "purchases"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "purchases": [
                                                {
                                                    "createdAt": "2025-01-17T17:45:47.987Z",
                                                    "updatedAt": "2025-01-17T17:45:47.987Z",
                                                    "status": "PurchaseRequested",
                                                    "txHash": "tx_hash",
                                                    "utxo": "utxo",
                                                    "errorType": "NETWORK_ERROR",
                                                    "errorNote": "error_note",
                                                    "errorRequiresManualReview": false,
                                                    "identifier": "identifier",
                                                    "amounts": [
                                                        {
                                                            "id": "unique-cuid-v2-auto-generated",
                                                            "createdAt": "2025-01-17T17:45:47.987Z",
                                                            "updatedAt": "2025-01-17T17:45:47.987Z",
                                                            "amount": 1000000,
                                                            "unit": "unit"
                                                        }
                                                    ],
                                                    "networkHandler": {
                                                        "id": "unique-cuid-v2-auto-generated",
                                                        "network": "PREPROD",
                                                        "addressToCheck": "address_to_check",
                                                        "paymentType": "WEB3_CARDANO_V1"
                                                    },
                                                    "purchaserWallet": {
                                                        "id": "unique-cuid-v2-auto-generated",
                                                        "walletVkey": "wallet_vkey",
                                                        "note": "note"
                                                    },
                                                    "sellerWallet": {
                                                        "walletVkey": "wallet_vkey",
                                                        "note": "note"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Creates a purchase and pays the seller. This requires funds to be available.",
                "summary": "REQUIRES API KEY Authentication (+PAY)",
                "tags": [
                    "purchase"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "identifier": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "network": {
                                        "type": "string",
                                        "enum": [
                                            "PREVIEW",
                                            "PREPROD",
                                            "MAINNET"
                                        ]
                                    },
                                    "sellerVkey": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "contractAddress": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "amounts": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "amount": {
                                                    "type": "number",
                                                    "nullable": true,
                                                    "minimum": 0,
                                                    "maximum": 9007199254740991
                                                },
                                                "unit": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "amount",
                                                "unit"
                                            ]
                                        },
                                        "maxItems": 7
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "enum": [
                                            "WEB3_CARDANO_V1"
                                        ]
                                    },
                                    "unlockTime": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        ]
                                    },
                                    "refundTime": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        ]
                                    },
                                    "submitResultTime": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "identifier",
                                    "network",
                                    "sellerVkey",
                                    "contractAddress",
                                    "amounts",
                                    "paymentType",
                                    "unlockTime",
                                    "refundTime",
                                    "submitResultTime"
                                ],
                                "example": {
                                    "identifier": "identifier",
                                    "network": "PREPROD",
                                    "sellerVkey": "seller_vkey",
                                    "contractAddress": "address",
                                    "amounts": [
                                        {
                                            "amount": 1000000,
                                            "unit": "unit"
                                        }
                                    ],
                                    "paymentType": "WEB3_CARDANO_V1",
                                    "unlockTime": "2024-12-01T23:00:00.000Z",
                                    "refundTime": "2024-12-02T23:00:00.000Z",
                                    "submitResultTime": "2024-12-01T22:00:00.000Z"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Purchase request created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "PurchaseRequested",
                                                        "PurchaseInitiated",
                                                        "PurchaseConfirmed",
                                                        "Completed",
                                                        "RefundRequestInitiated",
                                                        "RefundRequestConfirmed",
                                                        "RefundInitiated",
                                                        "RefundConfirmed",
                                                        "RefundRequestCanceledInitiated",
                                                        "Withdrawn",
                                                        "DisputedWithdrawn"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "createdAt",
                                                "updatedAt",
                                                "status"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "id": "unique-cuid-v2-auto-generated",
                                            "createdAt": "2025-01-17T17:45:47.987Z",
                                            "updatedAt": "2025-01-17T17:45:47.987Z",
                                            "status": "PurchaseRequested"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "Requests a refund for a completed purchase. This will collect the refund after the refund time.",
                "summary": "REQUIRES API KEY Authentication (+PAY)",
                "tags": [
                    "purchase"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "identifier": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "network": {
                                        "type": "string",
                                        "enum": [
                                            "PREVIEW",
                                            "PREPROD",
                                            "MAINNET"
                                        ]
                                    },
                                    "sellerVkey": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 250
                                    }
                                },
                                "required": [
                                    "identifier",
                                    "network",
                                    "sellerVkey",
                                    "address"
                                ],
                                "example": {
                                    "network": "PREPROD",
                                    "sellerVkey": "seller_vkey",
                                    "address": "address",
                                    "identifier": "identifier"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API key deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "txHash": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "txHash"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "status"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "txHash": "tx_hash"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (possible parameters missing or invalid)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/registry/": {
            "post": {
                "description": "Registers an agent to the registry.",
                "summary": "REQUIRES API KEY Authentication (+PAY)",
                "tags": [
                    "registry"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "network": {
                                        "type": "string",
                                        "enum": [
                                            "PREVIEW",
                                            "PREPROD",
                                            "MAINNET"
                                        ]
                                    },
                                    "paymentContractAddress": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "sellingWalletVkey": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "maxLength": 250
                                        },
                                        "maxItems": 5
                                    },
                                    "image": {
                                        "type": "string",
                                        "maxLength": 62
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "api_url": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "capability": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "maxLength": 250
                                            },
                                            "version": {
                                                "type": "string",
                                                "maxLength": 250
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "version"
                                        ]
                                    },
                                    "requests_per_hour": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "pricing": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "asset_id": {
                                                    "type": "string",
                                                    "maxLength": 62
                                                },
                                                "policy_id": {
                                                    "type": "string",
                                                    "maxLength": 62
                                                },
                                                "quantity": {
                                                    "type": "string",
                                                    "maxLength": 20
                                                }
                                            },
                                            "required": [
                                                "asset_id",
                                                "policy_id",
                                                "quantity"
                                            ]
                                        },
                                        "maxItems": 5
                                    }
                                },
                                "required": [
                                    "network",
                                    "paymentContractAddress",
                                    "tags",
                                    "image",
                                    "name",
                                    "api_url",
                                    "description",
                                    "company_name",
                                    "capability",
                                    "requests_per_hour",
                                    "pricing"
                                ],
                                "example": {
                                    "network": "PREPROD",
                                    "paymentContractAddress": "addr_test1...",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "image": "https://example.com/image.png",
                                    "name": "Agent Name",
                                    "api_url": "https://api.example.com",
                                    "description": "Agent Description",
                                    "company_name": "Company Name",
                                    "capability": {
                                        "name": "Capability Name",
                                        "version": "1.0.0"
                                    },
                                    "requests_per_hour": "100",
                                    "pricing": [
                                        {
                                            "asset_id": "usdm_asset_id",
                                            "policy_id": "usdm_policy_id",
                                            "quantity": "500000000"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Agent registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "txHash": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "txHash"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "txHash": "tx_hash"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deregisters a agent from the specified registry.",
                "summary": "REQUIRES API KEY Authentication (+PAY)",
                "tags": [
                    "registry"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 250
                        },
                        "required": true,
                        "name": "assetName",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PREVIEW",
                                "PREPROD",
                                "MAINNET"
                            ]
                        },
                        "required": true,
                        "name": "network",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 250
                        },
                        "required": true,
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment source deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "txHash": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "txHash"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "txHash": "tx_hash"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payment-source/": {
            "get": {
                "description": "Gets the payment sources including the status.",
                "summary": "REQUIRES API KEY Authentication (+ADMIN)",
                "tags": [
                    "payment-source"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "required": false,
                        "name": "take",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 250
                        },
                        "required": false,
                        "name": "cursorId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment source status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "paymentSources": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "createdAt": {
                                                                "type": "string"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string"
                                                            },
                                                            "network": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "PREVIEW",
                                                                    "PREPROD",
                                                                    "MAINNET"
                                                                ]
                                                            },
                                                            "addressToCheck": {
                                                                "type": "string",
                                                                "maxLength": 250
                                                            },
                                                            "paymentType": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "WEB3_CARDANO_V1"
                                                                ]
                                                            },
                                                            "blockfrostApiKey": {
                                                                "type": "string",
                                                                "maxLength": 250
                                                            },
                                                            "page": {
                                                                "type": "number"
                                                            },
                                                            "isSyncing": {
                                                                "type": "boolean"
                                                            },
                                                            "latestIdentifier": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "maxLength": 250
                                                            },
                                                            "AdminWallets": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "walletAddress": {
                                                                            "type": "string",
                                                                            "maxLength": 250
                                                                        },
                                                                        "order": {
                                                                            "type": "number"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "walletAddress",
                                                                        "order"
                                                                    ]
                                                                }
                                                            },
                                                            "CollectionWallet": {
                                                                "type": "object",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "walletAddress": {
                                                                        "type": "string",
                                                                        "maxLength": 250
                                                                    },
                                                                    "note": {
                                                                        "type": "string",
                                                                        "nullable": true
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "walletAddress",
                                                                    "note"
                                                                ]
                                                            },
                                                            "PurchasingWallets": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "walletVkey": {
                                                                            "type": "string",
                                                                            "maxLength": 250
                                                                        },
                                                                        "note": {
                                                                            "type": "string",
                                                                            "nullable": true
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "id",
                                                                        "walletVkey",
                                                                        "note"
                                                                    ]
                                                                }
                                                            },
                                                            "SellingWallets": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "walletVkey": {
                                                                            "type": "string",
                                                                            "maxLength": 250
                                                                        },
                                                                        "note": {
                                                                            "type": "string",
                                                                            "nullable": true
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "id",
                                                                        "walletVkey",
                                                                        "note"
                                                                    ]
                                                                }
                                                            },
                                                            "FeeReceiverNetworkWallet": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "walletAddress": {
                                                                        "type": "string",
                                                                        "maxLength": 250
                                                                    }
                                                                },
                                                                "required": [
                                                                    "walletAddress"
                                                                ]
                                                            },
                                                            "FeePermille": {
                                                                "type": "number",
                                                                "minimum": 0,
                                                                "maximum": 1000
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "createdAt",
                                                            "updatedAt",
                                                            "network",
                                                            "addressToCheck",
                                                            "paymentType",
                                                            "blockfrostApiKey",
                                                            "page",
                                                            "isSyncing",
                                                            "latestIdentifier",
                                                            "AdminWallets",
                                                            "CollectionWallet",
                                                            "PurchasingWallets",
                                                            "SellingWallets",
                                                            "FeeReceiverNetworkWallet",
                                                            "FeePermille"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "paymentSources"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "paymentSources": [
                                                {
                                                    "id": "unique-cuid-v2-auto-generated",
                                                    "createdAt": "2025-01-17T17:45:47.987Z",
                                                    "updatedAt": "2025-01-17T17:45:47.987Z",
                                                    "network": "PREPROD",
                                                    "paymentType": "WEB3_CARDANO_V1",
                                                    "addressToCheck": "address_to_check",
                                                    "blockfrostApiKey": "blockfrost_api_key",
                                                    "page": 1,
                                                    "isSyncing": false,
                                                    "latestIdentifier": null,
                                                    "AdminWallets": [
                                                        {
                                                            "walletAddress": "wallet_address",
                                                            "order": 0
                                                        }
                                                    ],
                                                    "CollectionWallet": {
                                                        "id": "unique-cuid-v2-auto-generated",
                                                        "walletAddress": "wallet_address",
                                                        "note": "note"
                                                    },
                                                    "PurchasingWallets": [
                                                        {
                                                            "id": "unique-cuid-v2-auto-generated",
                                                            "walletVkey": "wallet_vkey",
                                                            "note": "note"
                                                        }
                                                    ],
                                                    "SellingWallets": [
                                                        {
                                                            "id": "unique-cuid-v2-auto-generated",
                                                            "walletVkey": "wallet_vkey",
                                                            "note": "note"
                                                        }
                                                    ],
                                                    "FeeReceiverNetworkWallet": {
                                                        "walletAddress": "wallet_address"
                                                    },
                                                    "FeePermille": 50
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a payment source.",
                "summary": "REQUIRES API KEY Authentication (+ADMIN)",
                "tags": [
                    "payment-source"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "network": {
                                        "type": "string",
                                        "enum": [
                                            "PREVIEW",
                                            "PREPROD",
                                            "MAINNET"
                                        ]
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "enum": [
                                            "WEB3_CARDANO_V1"
                                        ]
                                    },
                                    "blockfrostApiKey": {
                                        "type": "string",
                                        "maxLength": 250
                                    },
                                    "FeePermille": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 1000
                                    },
                                    "AdminWallets": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "walletAddress": {
                                                    "type": "string",
                                                    "maxLength": 250
                                                }
                                            },
                                            "required": [
                                                "walletAddress"
                                            ]
                                        },
                                        "maxItems": 5
                                    },
                                    "FeeReceiverNetworkWallet": {
                                        "type": "object",
                                        "properties": {
                                            "walletAddress": {
                                                "type": "string",
                                                "maxLength": 250
                                            }
                                        },
                                        "required": [
                                            "walletAddress"
                                        ]
                                    },
                                    "CollectionWallet": {
                                        "type": "object",
                                        "properties": {
                                            "walletAddress": {
                                                "type": "string",
                                                "maxLength": 250
                                            },
                                            "note": {
                                                "type": "string",
                                                "maxLength": 250
                                            }
                                        },
                                        "required": [
                                            "walletAddress",
                                            "note"
                                        ]
                                    },
                                    "PurchasingWallets": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "walletMnemonic": {
                                                    "type": "string",
                                                    "maxLength": 1500
                                                },
                                                "note": {
                                                    "type": "string",
                                                    "maxLength": 250
                                                }
                                            },
                                            "required": [
                                                "walletMnemonic",
                                                "note"
                                            ]
                                        },
                                        "minItems": 1,
                                        "maxItems": 50
                                    },
                                    "SellingWallets": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "walletMnemonic": {
                                                    "type": "string",
                                                    "maxLength": 1500
                                                },
                                                "note": {
                                                    "type": "string",
                                                    "maxLength": 250
                                                }
                                            },
                                            "required": [
                                                "walletMnemonic",
                                                "note"
                                            ]
                                        },
                                        "minItems": 1,
                                        "maxItems": 50
                                    }
                                },
                                "required": [
                                    "network",
                                    "paymentType",
                                    "blockfrostApiKey",
                                    "FeePermille",
                                    "AdminWallets",
                                    "FeeReceiverNetworkWallet",
                                    "CollectionWallet",
                                    "PurchasingWallets",
                                    "SellingWallets"
                                ],
                                "example": {
                                    "network": "PREPROD",
                                    "paymentType": "WEB3_CARDANO_V1",
                                    "blockfrostApiKey": "blockfrost_api_key",
                                    "AdminWallets": [
                                        {
                                            "walletAddress": "wallet_address"
                                        }
                                    ],
                                    "FeeReceiverNetworkWallet": {
                                        "walletAddress": "wallet_address"
                                    },
                                    "FeePermille": 50,
                                    "CollectionWallet": {
                                        "walletAddress": "wallet_address",
                                        "note": "note"
                                    },
                                    "PurchasingWallets": [
                                        {
                                            "walletMnemonic": "wallet mnemonic",
                                            "note": "note"
                                        }
                                    ],
                                    "SellingWallets": [
                                        {
                                            "walletMnemonic": "wallet mnemonic",
                                            "note": "note"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment source created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string"
                                                },
                                                "updatedAt": {
                                                    "type": "string"
                                                },
                                                "network": {
                                                    "type": "string",
                                                    "enum": [
                                                        "PREVIEW",
                                                        "PREPROD",
                                                        "MAINNET"
                                                    ]
                                                },
                                                "addressToCheck": {
                                                    "type": "string",
                                                    "maxLength": 250
                                                },
                                                "paymentType": {
                                                    "type": "string",
                                                    "enum": [
                                                        "WEB3_CARDANO_V1"
                                                    ]
                                                },
                                                "blockfrostApiKey": {
                                                    "type": "string",
                                                    "maxLength": 250
                                                },
                                                "page": {
                                                    "type": "number"
                                                },
                                                "isSyncing": {
                                                    "type": "boolean"
                                                },
                                                "latestIdentifier": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "maxLength": 250
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "createdAt",
                                                "updatedAt",
                                                "network",
                                                "addressToCheck",
                                                "paymentType",
                                                "blockfrostApiKey",
                                                "page",
                                                "isSyncing",
                                                "latestIdentifier"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "id": "unique-cuid-v2-auto-generated",
                                            "createdAt": "2025-01-17T17:45:47.987Z",
                                            "updatedAt": "2025-01-17T17:45:47.987Z",
                                            "network": "PREPROD",
                                            "paymentType": "WEB3_CARDANO_V1",
                                            "addressToCheck": "address_to_check",
                                            "blockfrostApiKey": "blockfrost_api_key",
                                            "page": 1,
                                            "isSyncing": false,
                                            "latestIdentifier": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a payment source.",
                "summary": "REQUIRES API KEY Authentication (+ADMIN)",
                "tags": [
                    "payment-source"
                ],
                "security": [
                    {
                        "API-Key": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment source deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data"
                                    ],
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "id": "unique-cuid-v2-auto-generated"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}